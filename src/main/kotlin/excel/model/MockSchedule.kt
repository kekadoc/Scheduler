package excel.model

import kotlin.random.Random

object MockSchedule {

    val lessonNames = listOf<String>(
        "ФИЗИКА",
        "ИНОСТРАННЫЙ ЯЗЫК",
        "УЧЕБНО-ИССЛЕДОВАТЕЛЬСКАЯ РАБОТА",
        "ИСТОРИЯ",
        "ПРИКЛАДНАЯ ФИЗИЧЕСКАЯ КУЛЬТУРА",
        "ИНФОРМАТИКА",
        "ИСТОРИЯ",
        "ИНЖЕНЕРНАЯ ГЕОДЕЗИЯ",
        "МАТЕМАТИКА",
        "УЧЕБНО-ИССЛЕДОВАТЕЛЬСКАЯ РАБОТА",
        "ИНЖЕНЕРНАЯ ГЕОМЕТРИЯ и КОМПЬЮТЕРНАЯ ГРАФИКА",
        "ОСНОВЫ АЛГОРИТМИЗАЦИИ и ПРОГАРММИРОВАНИЯ",
        "ТЕОРЕТИЧЕКАЯ МЕХАНИКА",
        "ЭКОНОМИКА",
        "ЭЛЕКТРОСНАБЖЕНИЕ с ОСНОВАМИ ЭЛЕКТРОТЕХНИКИ",
        "МЕТОДЫ СТАТИСТИЧЕСКОГО АНАЛИЗА ДАННЫХ",
        "ТЕХНИКА ВЫСОКИХ НАПРЯЖЕНИЙ",
        "ЭКОЛОГИЯ",
        "ОБЪЕКТНО-ОРИЕНТИРОВАННОЕ ПРОГРАММИРОВАНИЕ",
        "ОСНОВЫ ИНЖЕНЕРНОЙ ГЕОЛОГИИ и МЕХАНИКА ГРУНТОВ",
        "ЭКОНОМИКА и БИЗНЕС",
        "ТЕОРЕТИЧЕСКИЕ ОСНОВЫ ЭЛЕКТРОТЕХНИКИ",
        "ОСНОВЫ ИНЖЕНЕРНОЙ ГЕОЛОГИИ и МЕХАНИКА ГРУНТОВ",
        "ИНФОРМАТИКА в ПРИЛОЖЕНИИ к ОТРАСЛИ",
        "ВЫЧИСЛИТЕЛЬНЫЕ МАШИНЫ, КОМПЛЕКСЫ, СИСТЕМЫ и СЕТИ",
        "ОСНОВЫ ОРГАНИЗАЦИИ и УПРАВЛЕНИЯ в СТРОИТЕЛЬСТВЕ",
        "ТЕХНОЛОГИЧЕСКИЕ ПРОЦЕССЫ в СТРОИТЕЛЬСТВЕ",
        "ДИСКРЕТНАЯ МАТЕМАТИКА и МАТЕМАТИЧЕСКАЯ ЛОГИКА",
        "БЕЗОПАСНОСТЬ ЖИЗНЕДЕЯТЕЛЬНОСТИ",
        "ПРОГРАММИРОВАНИЕ и АЛГОРИТМИЗАЦИЯ",
        "ЗАЩИТА ИНФОРМАЦИИ",
        "ТЕОРИЯ АВТОМАТИЧЕСКОГО УПРАВЛЕНИЯ",
        "ЭЛЕКТРОСНАБЖЕНИЕ",
        "МОДЕЛИРОВАНИЕ СИСТЕМ",
        "СИЛОВАЯ ЭЛЕКТРОНИКА",
        "ЭЛЕКТРИЧЕСКИЙ ПРИВОД",
        "ЭЛЕКТРИЧЕСКИЕ СТАНЦИИ и ПОДСТАНЦИИ",
        "МИКРОПРОЦЕССОРНЫЕ СРЕДСТВА АВТОМАТИЗАЦИИ и УПРАВЛЕНИЯ",
        "ЭЛЕКТРОСНАБЖЕНИЕ",
        "ПРЕОБРАЗОВАТЕЛЬНЫЕ УСТРОЙСТВА",
        "АДМИНИСТРИРОВНИЕ ОПЕРАЦИОННЫХ СИСТЕМ",
        "ПРОГРАММИРОВАНИЕ ИНТЕРНЕТ-ПРИЛОЖЕНИЙ",
        "СЕТИ и ТЕЛЕКОММУНИКАЦИИ",
        "УПРАВЛЕНИЕ ПРОЕКТАМИ АВТОМАТИЗИРОВАННЫХ СИСТЕМ УПРАВЛЕНИЯ",
        "АДМИНИСТРИРОВАНИЕ БАЗ ДАННЫХ (на примере Oracle)",
        "АВТОМАТИЗАЦИЯ ТЕХНОЛОГИЧЕСКИХ ПРОЦЕССОВ и ПРОИЗВОДСТВ",
        "УПРАВЛЕНИЕ КАЧЕСТВОМ",
        "ДИАГНОСТИКА и НАДЕЖНОСТЬ АВТОМАТИЗИРОВАННЫХ СИСТЕМ",
        "МЕТРОЛОГИЯ, СТАНДАРТИЗАЦИЯ и СЕРТИФИКАЦИЯ",
        "ОРГАНИЗАЦИЯ и ПЛАНИРОВАНИЕ АВТОМАТИЗИРОВАННЫХ ПРОИЗОДСТВ",
        "РЕЛЕЙНАЯ ЗАЩИТА и АВТОМАТИЗАЦИЯ ЭЛЕКТРОЭНЕРГЕТИЧЕСКИХ СИСТЕМ"
    )

    val teacherNames = listOf<String>(
        "Морозов Е.А.",
        "Сметанина Е.В.",
        "Германюк Г.Ю.",
        "Лабутина Т.В.",
        "Русских Т.И.",
        "Цигвинцева Г.Л.",
        "Куликов Н.М.",
        "Фокин В.Я.",
        "Морзова А.Р.",
        "Баженова Т.Р.",
        "Горяева И.А.",
        "Шергина М.А.",
        "Зайниева Т.В.",
        "Ковязин В.А.",
        "Травников А.В.",
        "Сухих И.И."
    )

    val teacherAbouts = listOf<String>(
        "д-р техн.наук, профессор",
        "старший преподаватель",
        "канд.физ.-мат.наук",
        "канд.экон.наук, доцент",
        "старший преподаватель",
        "канд.физ.-мат.наук, доцент",
        "канд.социол.наук, доцент",
        "канд.филос.наук, доцент"
    )

    val lessonTypes = listOf<String>(
        "лекции",
        "лабораторные",
        "практические",
        "лабораторные, практические",
        "практические, лабораторные"
    )

    val dayOfWeeks = listOf<String>(
        "Понедельник",
        "Вторник",
        "Среда",
        "Четверг",
        "Пятница",
        "Суббота"
    )

    val times = listOf(
        "8.30-\n10.00",
        "10.10-\n11.40",
        "12.00-\n13.30",
        "13.45-\n15.15",
        "15.25-\n16.55",
        "17.05-\n18.30",
    )

    val groups = setOf(
        "АСУ-21-1б-ЧФ",
        "АТПП-21-1б-ЧФ",
        "ПГС-21-1б-ЧФ",
        "АСУ-20-1б-ЧФ",
        "ПГС-20-1б-ЧФ",
        "АТПП-20-1б-ЧФ",
        "ЭС-20-1б-ЧФ",
        "АСУ-19-1б-ЧФ",
        "АТПП-19-1б-ЧФ",
        "ЭС-19-1б-ЧФ",
        "АСУ-18-1б-ЧФ",
        "АТПП-18-1б-ЧФ",
        "ЭС-18-1б-ЧФ"
    ).map { Group(it) }.toSet()

    val rooms = listOf<String>(
        "ауд. 47",
        "ауд. 29",
        "спортзал",
        "ауд. 7",
        "ауд. 213",
        "ауд.216",
        "ауд. 40",
        "ауд. 32",
        "ауд.211"
    )

    fun randomLesson(): Lesson {
        return Lesson(
            lessonNames.random(),
            type = lessonTypes.random(),
            teacherAbout = teacherAbouts.random(),
            teacherName = teacherNames.random(),
            room = rooms.random()
        )
    }

    fun randomLessonCell(time: String): LessonCell {
        val emptyChance = 0.5
        val first = if (Random.nextDouble() > emptyChance)  randomLesson() else null
        val second = if (Random.nextDouble() > emptyChance)  randomLesson() else null
        return LessonCell(
            time = time,
            first = first,
            second = second
        )
    }


    val mockSchedule = Schedule(
        groups = groups,
        lessons = dayOfWeeks.associateWith { times.map { time -> groups.associateWith { randomLessonCell(time) } } },
        lessonsTime = times,
        dayOfWeeks = dayOfWeeks
        /*groups = groups.associate {
            Group(it) to dayOfWeeks.associateWith { times.map { time -> randomLessonCell(time) } }
        }*/
    )

}